GitHubActionsOidc:
  Type: AWS::IAM::OIDCProvider
  Condition: CreateOIDCProvider
  Properties:
    Url: https://token.actions.githubusercontent.com
    ClientIdList:
      - sts.amazonaws.com
    ThumbprintList:
      - ffffffffffffffffffffffffffffffffffffffff

CloudFormationDeploymentRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: !Ref CloudFormationDeploymentRoleName
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: "Allow"
          Principal:
            Service:
              - cloudformation.amazonaws.com
          Action:
            - "sts:AssumeRole"
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonVPCFullAccess
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      - arn:aws:iam::aws:policy/AmazonRDSFullAccess
      - arn:aws:iam::aws:policy/AWSLambda_FullAccess
      - arn:aws:iam::aws:policy/IAMFullAccess
      - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
      - arn:aws:iam::aws:policy/AmazonEC2FullAccess
      - arn:aws:iam::aws:policy/SecretsManagerReadWrite
    Policies:
      - PolicyName: allow-pass-role-lambda
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Action: "iam:PassRole"
              Effect: Allow
              Resource: "*"

GitHubActionsRole:
  Type: AWS::IAM::Role
  DependsOn: CloudFormationDeploymentRole
  Properties:
    RoleName: !Ref GitHubActionsRoleName
    AssumeRolePolicyDocument:
      Statement:
        - Effect: Allow
          Action: sts:AssumeRoleWithWebIdentity
          Principal:
            Federated: !If
              - CreateOIDCProvider
              - !Ref GitHubActionsOidc
              - !Ref OIDCProviderArn
          Condition:
            StringEquals:
              token.actions.githubusercontent.com:aud: !Ref OIDCAudience
            StringLike:
              token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*

GitHubActionsPolicy:
  Type: AWS::IAM::RolePolicy
  DependsOn: CloudFormationDeploymentRole
  Properties:
    RoleName: !Ref GitHubActionsRole
    PolicyName: allow-github-actions-lambda-deploy
    PolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Action:
            - "cloudformation:*"
            - "ec2:DescribeVpcs"
            - "ec2:DescribeSubnets"
            - "s3:*"
            - "lambda:*"
            - "apigateway:*"
            - "rds:*"
            - "secretsmanager:*"
          Effect: Allow
          Resource: "*"
        - Action: "cloudformation:DeleteStack"
          Effect: Deny
          Resource: "*"
        - Action: "iam:PassRole"
          Effect: Allow
          Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${CloudFormationDeploymentRoleName}
        # Permessi specifici per creare e gestire bucket S3
        - Action:
            - "s3:CreateBucket"
            - "s3:PutBucketPolicy"
            - "s3:PutBucketVersioning"
            - "s3:PutBucketEncryption"
            - "s3:PutBucketPublicAccessBlock"
            - "s3:ListAllMyBuckets"
          Effect: Allow
          Resource: "*"
        # Permessi per operare su qualsiasi bucket che inizia con un prefisso specifico
        - Action:
            - "s3:GetObject"
            - "s3:PutObject"
            - "s3:ListBucket"
            - "s3:DeleteObject"
            - "s3:PutObjectAcl"
          Effect: Allow
          Resource:
            - !Sub "arn:${AWS::Partition}:s3:::${LambdaBucket}"
            - !Sub "arn:${AWS::Partition}:s3:::${LambdaBucket}/*"
            # Se il nome del bucket per gli ZIP Ã¨ diverso da LambdaBucket, aggiungi qui
            - !Sub "arn:${AWS::Partition}:s3:::${GitHubOrg}-${RepositoryName}-*"
            - !Sub "arn:${AWS::Partition}:s3:::${GitHubOrg}-${RepositoryName}-*/*"